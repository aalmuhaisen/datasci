install.packages(c("Ggplot2", "dplyr", "purrr", "devtools"))
install.packages("ggplot2")
clear
clr
clean
install.packages("Quandl")
install.packages("timeSeries")
install_github("StatsWithR/statsr")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install_github("StatsWithR/statsr")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install.packages("Reader")
install.packages("reader")
install.packages("lubridate")
getwd()
setwd("/Users/aalmuhaisen/Documents/R")
getwd()
getwd()
setwd("~/datasci")
setwd("/Users/aalmuhaisen/Documents/R/datasci")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","~/Documents/R/datasci/acs.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","~/Documents/R/datasci/uscomm.csv")
uscomm <- read.csv("uscomm.csv")
View(uscomm)
load("dplyer")
load("dplyr")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("dplyr")
?select
agricultureLogical <- uscomm$ACR==3
agricultureLogical <- uscomm$ACR==3 & uscomm$AGS==6
which(agricultureLogical)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","~/Documents/R/datasci/jeff.jpg")
install.packages("jpeg")
library("jpeg")
?jpeg
readJPEG("jeff.jpg", native = TRUE)
quantile(readJPEG("jeff.jpg", native = TRUE))
?quantile
quantile(readJPEG("jeff.jpg", native = TRUE),probs = c(0.1, 0.5, 1, 2, 5, 10, 50, NA)/100))
quantile(readJPEG("jeff.jpg", native = TRUE),probs = c(0.1, 0.5)/100))
quantile(readJPEG("jeff.jpg", native = TRUE),probs = c(0.1, 0.5)/100)))
quantile(readJPEG("jeff.jpg", native = TRUE),probs = c(0.1, 0.5)/100)
quantile(readJPEG("jeff.jpg", native = TRUE),probs = c(30, 80)/100)
quantile(readJPEG("jeff.jpg", native = TRUE),probs = c(.30, .80))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","~/Documents/R/datasci/gdp.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","~/Documents/R/datasci/fedsast.csv")
gpd <- read.csv("gdp.csv")
fedstats <- read.csv("fedstats.csv")
fedstats <- read.csv("fedstat.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","~/Documents/R/datasci/fedstat.csv")
fedstats <- read.csv("fedstat.csv")
View(fedstats)
View(gpd)
View(gpd)
View(gpd)
View(fedstats)
gdpfedstat <- merge(gdp, fedstats, by.x = "X", by.y = "CountryCode")
gdp <- read.csv("gdp.csv")
gdpfedstat <- merge(gdp, fedstats, by.x = "X", by.y = "CountryCode")
View(gdpfedstat)
?merge
gdpfedstat <- merge(gdp, fedstats, by.x = "X", by.y = "CountryCode", all = T)
gdpfedstat <- merge(gdp, fedstats, by.x = "X", by.y = "CountryCode", all = F)
gdpfedstat <- merge(gdp, fedstats, by.x = "X", by.y = "CountryCode", all = F, sort = T)
View(gdpfedstat)
sort(gdpfedstat$Gross.domestic.product.2012)
View(gdpfedstat)
View(gdp)
View(fedstats)
View(gdp)
gdpfedstat <- merge(gdp, fedstats)
View(gdpfedstat)
gdpfedstat <- merge(gdp, fedstats, by = NULL)
View(gdp)
gdpfedstat <- merge(gdp, fedstats, by = X)
gdpfedstat <- merge(gdp, fedstats, by = "X")
gdpfedstat <- merge(gdp, fedstats, by = "CountryCode")
gdpfedstat <- merge(gdp, fedstats, by.y = "CountryCode")
gdpfedstat <- merge(gdp, fedstats, by.y = "CountryCode", by.x = "X")
View(gdpfedstat)
gdpfedstat <- merge(gdp, fedstats, by.y = "CountryCode", by.x = "X", na.rm=T)
View(gdpfedstat)
gdpfedstat <- inner_join(gdp, fedstats, by = NULL, copy = FALSE)
View(gdp)
colnames(gdp)[1] <- "CountryCode"
View(gdp)
gdpfedstat <- inner_join(gdp, fedstats, by = NULL, copy = FALSE)
gdpfedstat <- inner_join(gdp, fedstats)
gdpfedstat <- merge(gdp, fedstats)
View(gdpfedstat)
View(gdp)
View(gdpfedstat)
gdpfedstat <- gdpfedstat[!is.na(gdpfedstat$Gross.domestic.product.2012)]
is.na(gdpfedstat$Gross.domestic.product.2012)
gdpfedstat <- gdpfedstat[order(gdpfedstat$Gross.domestic.product.2012)]
gdpfedstat <- gdpfedstat[order(gdpfedstat$Gross.domestic.product.2012),]
View(gdpfedstat)
gdpfedstat <- gdpfedstat[order(as.numeric(gdpfedstat$Gross.domestic.product.2012)),]
View(gdpfedstat)
gdpfedstat <- gdpfedstat[order(as.integer(gdpfedstat$Gross.domestic.product.2012)),]
View(gdpfedstat)
mean(gdpfedstat$Gross.domestic.product.2012)
gdpfedstat$Gross.domestic.product.2012 = as.numeric(as.character(gdpfedstat$Gross.domestic.product.2012))
gdpfedstat <- gdpfedstat[order(as.integer(gdpfedstat$Gross.domestic.product.2012)),]
mean(gdpfedstat$Gross.domestic.product.2012)
View(gdpfedstat)
gdpfedstat$Gross.domestic.product.2012 <- gdpfedstat$Gross.domestic.product.2012[!is.na(gdpfedstat$Gross.domestic.product.2012)]
gdpfedstat <- gdpfedstat[!is.na(gdpfedstat$Gross.domestic.product.2012)]
View(gdpfedstat)
gdpfedstat <- gdpfedstat[!is.na(gdpfedstat$Gross.domestic.product.2012),]
View(gdpfedstat)
NROW(gdpfedstat)
?order
gdpfedstat <- gdpfedstat[order(as.integer(gdpfedstat$Gross.domestic.product.2012), decreasing = TRUE),]
View(gdpfedstat)
head(gdpfedstat$Gross.domestic.product.2012,13)
head(gdpfedstat$Gross.domestic.product.2012)
name(head(gdpfedstat$Gross.domestic.product.2012)()
name(head(gdpfedstat$Gross.domestic.product.2012)
name(head(gdpfedstat$Gross.domestic.product.2012)
name(head(gdpfedstat$Gross.domestic.product.2012))
name(head(gdpfedstat$Gross.domestic.product.2012))
gdpfedstat[gdpfedstat$Gross.domestic.product.2012==13]
gdpfedstat[13,2]
gdpfedstat[13,3]
gdpfedstat[13,1]
gdpfedstat[13,]
gdpfedstat[13,2]
gdpfedstat[13,4]
if gdpfedstat$Income.Group=="High income: OECD"{
mean(gdpfedstat$X.3)
}
if gdpfedstat$Income.Group=="High income: OECD"(
mean(gdpfedstat$X.3)
)
?if
if (gdpfedstat$Income.Group=="High income: OECD"){
mean(gdpfedstat$X.3)
}
if (gdpfedstat$Income.Group=="High income: OECD"){
mean(as.numeric(gdpfedstat$X.3))
}
mean(gdpfedstat$X.3)
gdpfedstat$X.3 = as.numeric(as.character(gdpfedstat$X.3))
gdpfedstat <- merge(gdp, fedstats)
gdpfedstat$Gross.domestic.product.2012 = as.numeric(as.character(gdpfedstat$Gross.domestic.product.2012))
gdpfedstat$X.3 = as.numeric((gdpfedstat$X.3))
View(gdpfedstat)
mean(gdpfedstat$X.3)
gdpfedstat <- gdpfedstat[!is.na(gdpfedstat$Gross.domestic.product.2012),]
NROW(gdpfedstat)
gdpfedstat <- gdpfedstat[order(as.integer(gdpfedstat$Gross.domestic.product.2012), decreasing = TRUE),]
gdpfedstat[13,4]
if (gdpfedstat$Income.Group=="High income: OECD"){
mean(as.numeric(gdpfedstat$X.3))
}
if (gdpfedstat$Income.Group=="High income: OECD"){
mean((gdpfedstat$X.3))
}
if (gdpfedstat$Income.Group("High income: OECD")){
mean((gdpfedstat$X.3))
}
if (gdpfedstat$Income.Group=="High income: OECD"){
mean((gdpfedstat$X.3))
}
View(gdpfedstat)
gdpfedstat[gdpfedstat$Income.Group=="High income: OECD",]
which(gdpfedstat[gdpfedstat$Income.Group=="High income: OECD",])
which(gdpfedstat$Income.Group=="High income: OECD")
gdpfedstat[which(gdpfedstat$Income.Group=="High income: OECD"),]
gdpfedstat[which(gdpfedstat$Income.Group=="High income: OECD"),5]
View(gdpfedstat)
mean(gdpfedstat[which(gdpfedstat$Income.Group=="High income: OECD"),5])
mean(gdpfedstat[which(gdpfedstat$Income.Group=="High income: OECD"),5])
mean(gdpfedstat[which(gdpfedstat$Income.Group=="High income: nonOECD"),5])
mean(gdpfedstat[which(gdpfedstat$Income.Group=="High income: OECD"),2])
mean(gdpfedstat[which(gdpfedstat$Income.Group=="High income: nonOECD"),2])
tail(gdpfedstat)
tail(gdpfedstat,38)
?tail
tail(gdpfedstat$Income.Group,38)
tail(gdpfedstat$Income.Group,38)=="Lower middle income"
sum(tail(gdpfedstat$Income.Group,38)=="Lower middle income")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "~/Documents/R/datasci/USsur.csv")
USsur <- read.csv(USsur.csv)
USsur <- read.csv("USsur.csv")
View(USsur)
View(USsur)
View(USsur)
USsurSplit <- strsplit(names(USsur),"wgtp")
USsurSplit
USsurSplit[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "~/Documents/R/datasci/GDPdata.csv")
GDPdata <- read.csv("GDPdata.csv")
grep(",",GDPdata$Gross.domestic.product.2012)
View(GDPdata)
grep(",",GDPdata$X.3)
View(GDPdata)
gsub(",",GDPdata$X.3)
gsub(",","",GDPdata$X.3,)
View(GDPdata)
gsub(",","",GDPdata$X.3)
GDPdata$X.3 <- gsub(",","",GDPdata$X.3)
View(GDPdata)
mean(GDPdata$X.3)
mean(GDPdata$X.3, na.rm = T)
View(GDPdata)
is.numeric(GDPdata$X.3)
is.numeric(GDPdata$X.3)
is.numeric(GDPdata$X.3,)
is.numeric(as.numeric(GDPdata$X.3))
View(GDPdata)
sapply(GDPdata$X.3, is.numeric)
numerical <- sapply(GDPdata$X.3, is.numeric)
numerical
GDPdata$X.3
GDPdata$X.3[,numerical]
GDPdata$X.3[numerical]
GDPdata$X.3[numerical,]
GDPdata[numerical,4]
GDPdata[numerical,5]
Filter(is.numeric, GDPdata$X.3)
mean(numerical)
numerical
numerical <- sapply(as.numeric(GDPdata$X.3), is.numeric)
View(GDPdata)
str(GDPdata[5,5])
as.numeric(GDPdata[5,5])
str(as.numeric(GDPdata[5,5]))
numerical <- sapply(as.numeric(GDPdata$X.3), is.numeric)
numerical <- sapply(as.numeric(GDPdata$X.3), is.numeric(na.rm=T))
numerical
View(GDPdata)
GDPdata[5,^[0-9]]
grep([0-9],GDPdata$X.3)
grep((0-9),GDPdata$X.3)
grep(0-9,GDPdata$X.3)
grep("0-9",GDPdata$X.3)
grep("^0",GDPdata$X.3)
grep("^0",GDPdata$X.3, value = T)
grep("1",GDPdata$X.3, value = T)
grep("2",GDPdata$X.3, value = T)
grep("0-9",GDPdata$X.3, value = T)
grep("[0-9]",GDPdata$X.3, value = T)
mean(grep("[0-9]",GDPdata$X.3, value = T))
mean(as.numeric(grep("[0-9]",GDPdata$X.3, value = T)))
if (GDPdata$Gross.domestic.product.2012>0 &GDPdata$Gross.domestic.product.2012<191){
mean(as.numeric(grep("[0-9]",GDPdata$X.3, value = T)))
}
if (as.numeric(GDPdata$Gross.domestic.product.2012)>0 & as.numeric(GDPdata$Gross.domestic.product.2012)<191){
mean(as.numeric(grep("[0-9]",GDPdata$X.3, value = T)))
}
seq(1,190)
list <- seq(1,190)
if (as.numeric(GDPdata$Gross.domestic.product.2012)%in%list){
mean(as.numeric(grep("[0-9]",GDPdata$X.3, value = T)))
}
as.numeric(GDPdata$Gross.domestic.product.2012)%in%list
GDPdata[2,as.numeric(GDPdata$Gross.domestic.product.2012)%in%list]
which(as.numeric(GDPdata$Gross.domestic.product.2012)%in%list)
GDPdata[2,which(as.numeric(GDPdata$Gross.domestic.product.2012)%in%list)]
GDPdata[3,which(as.numeric(GDPdata$Gross.domestic.product.2012)%in%list)]
mean(GDPdata[5,which(as.numeric(GDPdata$Gross.domestic.product.2012)%in%list)])
which(as.numeric(GDPdata$Gross.domestic.product.2012)%in%list)
list
as.numeric(GDPdata$Gross.domestic.product.2012)
mean(GDPdata[5,5:194])
GDPdata[5,5:194]
GDPdata[5,5]
GDPdata[5,5:7]
mean(GDPdata[5:194,5])
GDPdata[5:194,5]
mean(as.numeric(GDPdata[5:194,5]))
GDPdata[5,5
]
grep("^United",countryNames), 3
grep("^United",countryNames)
grep("^United",GDPdata$X.1)
grep("^United",GDPdata$X.2)
grep("^United",GDPdata$X.2, value = T)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
sampleTimes
year(sampleTimes)
format(sampleTimes,'%Y')
sampleTimes
format(sampleTimes,'%Y')=="2012"
which(format(sampleTimes,'%Y')=="2012")
NROW(which(format(sampleTimes,'%Y')=="2012"))
NROW(which(format(sampleTimes,'%a')=="M"))
format(sampleTimes,'%a')
NROW(which(format(sampleTimes,'%a')=="Mon"))
NROW(which(format(sampleTimes,'%a%Y')=="Mon2012"))
View(fedstats)
grep("[Jj][Uu][Nn][Ee]",gdpfedstat$Special.Notes, value = T)
grep("Fiscal year end: June 30",gdpfedstat$Special.Notes, value = T)
NROW(grep("Fiscal year end: June 30",gdpfedstat$Special.Notes, value = T))
NROW(grep("Fiscal year end: June 30",gdpfedstat$Special.Notes))
